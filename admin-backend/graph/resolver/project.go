package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.42

import (
	"admin-backend/graph"
	"admin-backend/graph/model"
	"context"
	"fmt"
)

func (r *mutationResolver) CreateProject(ctx context.Context, id string, title string, description string, isFavorite bool) (*model.Project, error) {
	panic(fmt.Errorf("not implemented: CreateProject - createProject"))
}

func (r *mutationResolver) UpdateProject(ctx context.Context, id string, title string, description string, isFavorite bool) (*model.Project, error) {
	panic(fmt.Errorf("not implemented: UpdateProject - updateProject"))
}

func (r *mutationResolver) DeleteProject(ctx context.Context, id string) (*model.Project, error) {
	panic(fmt.Errorf("not implemented: DeleteProject - deleteProject"))
}

func (r *queryResolver) Projects(ctx context.Context) ([]*model.Project, error) {
	panic(fmt.Errorf("not implemented: Projects - projects"))
}

func (r *queryResolver) Project(ctx context.Context, id string) (*model.Project, error) {
	panic(fmt.Errorf("not implemented: Project - project"))
}

func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
