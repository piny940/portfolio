name: Test
on: [push]

env:
  NODE_VERSION: 22.14.0
jobs:
  app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          package_json_file: "app/package.json"
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "app/package.json"
      - run: cd app && pnpm install
      - run: cd app && pnpm test
      - name: Prettier && ESLint
        run: cd app && if pnpm lint |& grep -E "(error|warn)"; then exit 1; fi
      - name: Build Test
        run: cd app && pnpm build

  backend:
    services:
      postgres:
        image: postgres:17.4-alpine
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: portfolio_test
    env:
      GO_VERSION: 1.21.x
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set Env
        run: |
          echo "DB_USER=postgres" >> $GITHUB_ENV
          echo "DB_PASSWORD=postgres" >> $GITHUB_ENV
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV
          echo "DB_NAME=portfolio_test" >> $GITHUB_ENV
          echo "DB_SSLMODE=disable" >> $GITHUB_ENV
          echo "DB_TRY_LIMIT=1" >> $GITHUB_ENV
          echo "DB_MIGRATIONS_DIR=../db/migrations" >> $GITHUB_ENV
          echo "DB_DEBUG=true" >> $GITHUB_ENV
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install dependencies
        run: cd backend && go get .
      - name: Build
        run: cd backend && go build -v ./...
      - name: Test with the Go CLI
        run: cd backend && go test ./...

  admin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          package_json_file: "admin/package.json"
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "admin/package.json"
      - run: cd admin && pnpm install
      - name: Prettier && ESLint
        run: cd admin && if pnpm lint |& grep -E "(error|warn)"; then exit 1; fi
      - name: Build Test
        run: cd admin && pnpm build
        env:
          BACKEND_HOST: http://localhost:8080
  updater:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          package_json_file: "updater/package.json"
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION}}
          cache: "pnpm"
          cache-dependency-path: "updater/package.json"
      - run: cd updater && pnpm install
      - name: Prettier && ESLint
        run: cd updater && if pnpm lint |& grep -E "(error|warn)"; then exit 1; fi
      - name: Build Test
        run: cd updater && pnpm build
      # - name: Yarn test
      #   run: if yarn --cwd updater test |& grep -E "failed"; then exit 1; fi
