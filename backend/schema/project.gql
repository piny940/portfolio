type Project {
  id: String!
  title: String!
  description: String!
  isFavorite: Boolean!
  position: Int!
  githubLink: String
  qiitaLink: String
  appLink: String
  tags: [Technology!]!
  createdAt: Time!
  updatedAt: Time!
}
type ProjectTag {
  projectId: Uint!
  id: Uint!
  name: String!
  logoUrl: String
  tagColor: String!
  createdAt: Time!
  updatedAt: Time!
}
input ProjectInput {
  id: String!
  title: String!
  description: String!
  isFavorite: Boolean!
  position: Int
  githubLink: String
  qiitaLink: String
  appLink: String
}
input UpdateProjectOrderInput {
  ids: [String!]!
}

extend type Query {
  projects: [Project!]!
  project(id: String!): Project!
}
extend type Mutation {
  createProject(input: ProjectInput!): Project!
  updateProject(input: ProjectInput!): Project!
  updateProjectOrder(input: UpdateProjectOrderInput!): [Project!]!
  deleteProject(id: String!): Project!
  updateProjectTags(id: String!, tags: [Uint!]!): [Technology!]!
}
